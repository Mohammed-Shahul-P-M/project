<style>
    p.Topic {
        font-weight: 550;
        font-size: 1.3rem;
        margin-left: 20px;
    }

    .order-section {
        width: 94%;
        margin-left: 3%;
        background-color: #c9cbff;
        border-radius: 4px;
        margin-bottom: 20px;
    }

    .left-section {
        width: 60%;
        background-color: white;
        height: 450px;
        display: inline-block;
        margin: 2%;
        border-radius: 4px;
        overflow-y: scroll;
        position: relative;
    }

    .right-section {
        width: 30%;
        background-color: white;
    }

    ::-webkit-scrollbar {
        display: none;
    }

    p.ordertopic {
        text-align: center;
        font-weight: 550;
    }

    .eachOrder {
        border: none;
        border-bottom: 1px solid rgb(162, 159, 159);
        min-height: 90px;
        position: relative;
        box-shadow: 1px 1px 2px 1px gray;
        margin-bottom: 8px;
        border-radius: 4px;
        width: 95%;
        margin-left: 2.5%;
        background-color: rgb(229, 253, 229);
    }

    .eachOrder>* {
        font-size: 0.8rem;
        font-weight: 550;
        margin: 3px;
        position: absolute;
        top: 40px;
    }

    .eachOrder p.price {
        left: 10px;
    }

    .eachOrder p.price span {
        color: rgb(111, 110, 110);
        font-style: italic;
        font-size: 0.7rem;
    }

    .eachOrder img {
        width: 70px;
        margin-top: 10px;
        top: 0;
        left: 17%;
    }

    .eachOrder p.action input {
        width: 40px;
        padding-top: 7px;
        text-align: center;
    }

    .eachOrder p.name {
        top: 10px;
        left: 44%;
    }

    .eachOrder p.action {
        left: 36%;
    }

    .eachOrder p.total {
        left: 80%;
        top: 50px;
        font-size: 1.1rem;
        font-family: 'Courier New', Courier, monospace;
        font-weight: 550;
    }

    .eachOrder p.close {
        left: 92%;
        top: 7px;
        font-size: 1rem;
        color: red;
        border: 2px solid red;
        padding: 0 4px;
        border-radius: 50%;
        cursor: pointer;
    }

    p.action span.btn {
        background-color: white;
        padding: 1px 6px;
        border-radius: 50%;
        font-size: 1rem;
        font-weight: 800;
        margin: 3px;
        cursor: pointer;
        color: white;
    }

    p.action span.btn1 {
        padding-top: 0;
        padding-left: 8px;
        padding-right: 8px;
    }

    .right-section .right-child {
        border-radius: 5px;
        background-color: rgb(215, 230, 233);
        width: 90%;
        margin-bottom: 20px;
        margin-left: 5%;
        padding: 3px 0;
        position: relative;
    }

    .input-hidden {
        display: none;
    }

    label {
        margin: 0 10px;
    }

    input[type=radio]:checked+label>img {
        border: 1px solid #fff;
        box-shadow: 0 0 1px 1px #090;

    }

    .payment {
        text-align: center;
    }


    .right-child p.address {
        margin-left: 40px;
    }

    .right-child p {
        font-size: 0.7rem;
        font-weight: 550;
    }

    .grandtoTal p {
        margin-left: 30px;
        font-size: 0.9rem;
    }

    .grandtoTal p span {
        margin-left: 40px;
    }

    .right-child i {
        color: blue;
        position: absolute;
        top: 15px;
        left: 7px;
    }

    .right-section button {
        border-radius: 4px;
        float: right;
        font-weight: 550;
        font-size: 0.7rem;
        background-color: rgb(16, 162, 58);
        margin-right: 15px;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }

    span.message {
        font-weight: 500;
        font-size: 0.7rem;
    }

    .fnbtn {
        position: absolute;
        font-weight: 500;
        font-family: 'Times New Roman', Times, serif;
        background-color: rgb(198, 203, 198);
        padding: 1px 3px;
        border-radius: 4px;
        cursor: pointer;
    }

    .fnbtn:nth-child(1) {
        color: blue;
        left: 70%;
    }

    .fnbtn:nth-child(2) {
        color: red;
        left: 85%;
    }
</style>
<p class="Topic">Cart</p>
{{#if cartItems}}
{{#each cartItems}}
{{#if this.banned}}
{{else}}
<div class="order-section">
    <div class="left-section">
        <p class="ordertopic">{{this.storeName}} <span onclick="enableInput()" class="fnbtn">edit</span><span
                onclick="deleteOrder('{{this.storeId}}')" class="fnbtn">delete</span></p>
        {{#each this.cartItems}}
        <div id="{{@../index}}{{this._id}}" class="eachOrder">
            <p class="price">₹ {{this.price}}{{#ifEq this.unit 'kg'}}<span>/kg</span>{{/ifEq}}</p>
            <img src="/images/products/{{this.prodImage}}" alt="{{this.name}}">
            <p class="name">{{this.name}}</p>
            <p class="action">
                <span style="background-color: darkred;" onclick="addQnt('{{@index}}','{{@../index}}','-')"
                    class="btn btn1">-</span>
                <input type="number" disabled oninput="checkValue(event,this.value)" id="{{@../index}}{{@index}}id"
                    onchange="changeQnt(event,'{{@../index}}/{{@index}}',)" {{#ifEq this.unit 'kg' }}
                    value="{{X this.qnt 1000}}" {{else}} value="{{this.qnt}}" {{/ifEq}} {{#ifEq this.unit 'kg'
                    }}min="100" step="50" {{else}} min="1" step="1" {{/ifEq}}>
                <span style="background-color: green;" onclick="addQnt('{{@index}}','{{@../index}}','+')"
                    class="btn">+</span>
                {{#ifEq this.unit 'kg'}} <span class="message">(in grams)</span>
                {{/ifEq}}
            </p>
            <p style="font-weight: 550;" id="{{@../index}}/{{@index}}idTotal" class="total">₹ {{X this.price this.qnt}}
            </p>
            <p class="close" onclick="removeItem({{@../index}},{{@index}},'{{this._id}}')">X</p>
        </div>
        {{/each}}
    </div>
    <div class="left-section right-section">
        <p class="ordertopic">overview</p>
        <div class="right-child grandtoTal">
            <p class="grandTotal">Total Cost <span id="{{@index}}cartTotal">₹ {{this.cartTotal}}</span></p>
            <p class="totalItem">Total Items <span id="{{@index}}totalItem">{{this.TotalItem}}</span></p>
        </div>
        <div class="right-child">
            <i class="fas fa-street-view"></i>
            <p class="address"> {{../userData.address}} </p>
        </div>
        <div class="right-child payment">
            <p>Mode of payment</p>
            <input class="input-hidden" onclick='mop="paypal"' type="radio" value="paypal" checked required
                name="mop{{@index}}" id="pypal{{@index}}">
            <label for="pypal{{@index}}">
                <img style="width: 40px; height: 40px;" src="/images/paypal.png" alt="pay pal">
            </label>
            <input class="input-hidden" onclick='mop="rzpay"' type="radio" value="rzpay" required name="mop{{@index}}"
                id="rzpay{{@index}}">
            <label for="rzpay{{@index}}">
                <img style="width: 40px; height: 40px;" src="/images/razorpay.png" alt="razor pay">
            </label>
            <input class="input-hidden" onclick='mop="cod"' type="radio" value="cod" required name="mop{{@index}}"
                id="cod{{@index}}">
            <label for="cod{{@index}}">
                <img style="width: 40px; height: 40px;" src="/images/cod.png" alt="razor pay">
            </label>
        </div>
        <button onclick="placeOrder('{{@index}}')" type="submit">Place Order</button>
    </div>
</div>
{{/if}}
{{/each}}
{{else }}
sorry cart is empty
{{/if}}
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    function changeQnt(e, id) {
        if (e.target.value == '') {
            e.target.value = e.target.min
        }
        let qnt = parseInt(e.target.value)
        console.log(qnt)
        var inputStepvalue = document.getElementById(e.target.id).step;
        if (inputStepvalue == 50 && qnt % 50 != 0) qnt = (parseInt(qnt / 50) + 1) * 50
        $.ajax({
            url: '/cart/changeQnt',
            method: 'post',
            data: {
                cordinate: id,
                qnt: qnt
            },
            success: (res => {
                if (res.err) alert('sorry can not change quantity please try again later')
                else {
                    e.target.value = qnt
                    document.getElementById(id + 'idTotal').innerText = `₹ ${res.newCost}`
                    document.getElementById(id.slice(0, 1) + 'cartTotal').innerText = `₹ ${res.cartTotal}`
                }
            })
        })

    }

    function addQnt(prodId, storeId, opt) {
        let reqInput = document.getElementById(`${storeId}${prodId}id`)
        let inputStepvalue = parseInt(reqInput.step)
        let inputValue = parseInt(reqInput.value)
        function chageqnt(id, qnt) {
            $.ajax({
                url: '/cart/changeQnt',
                method: 'post',
                data: {
                    cordinate: id,
                    qnt: qnt
                },
                success: (res => {
                    if (res.err) alert('sorry error ? please check value or reload page ')
                    else reqInput.value = qnt
                    document.getElementById(storeId + '/' + prodId + 'idTotal').innerText = `₹ ${res.newCost}`
                    document.getElementById(storeId + 'cartTotal').innerText = `₹ ${res.cartTotal}`
                })

            })
        }
        if (inputStepvalue == 1 && inputValue > 1 && opt == '-' || opt == '-' && inputStepvalue == 50 && inputValue > 100) {
            let newQnt = inputValue - inputStepvalue
            chageqnt(`${storeId}/${prodId}`, newQnt)
        } else if (opt == '+') {
            let newQnt = inputValue + inputStepvalue
            chageqnt(`${storeId}/${prodId}`, newQnt)
        }

    }
    function checkValue(e, value) {
        if (value == '' || value == '.' || value == '-') e.target.value = ''
    }
    // function to remove one item from the cart 
    function removeItem(n, m, id) {
        $.ajax({
            url: '/cart/remove',
            method: 'post',
            data: {
                m: m,
                n: n
            },
            success: (res => {
                if (res.totalItem == 0) location.reload()
                if (res.err) alert('sorry some error occured please try again later')
                else {
                    document.getElementById(n + id).remove()
                    console.log(res)
                    document.getElementById(n + 'cartTotal').innerText = '₹ ' + res.cartTotal
                    document.getElementById(n + 'totalItem').innerText = res.totalItem
                }

            })
        })
    }
    function enableInput() {
        console.log('ok here')
        let allInput = document.querySelectorAll('input[type="number"]')
        allInput.forEach(i => {
            i.removeAttribute("disabled")
            i.setAttribute('style', 'border:2px solid #ff4646')
        })
    }
    function deleteOrder(id) {
        let r = confirm('are you sure to want delete ?')
        if (r) {
            $.ajax({
                url: '/cart/removeStore',
                method: 'post',
                data: { Id: id },
                success: (res => {
                    if (res.err) alert('sorry some error occured')
                    else location.reload()
                })
            })
        }
    }
    // function to place order
    let mop = 'paypal'
    function placeOrder(id) {
        console.log(id)
        $.ajax({
            url: '/cart/place-order',
            method: 'post',
            data: { id: id, mop: mop },
            success: (res => {
                if (res.err) alert('sorry some error please try again later')
                if (res.mop == 'cod') varifyPayment()
                else {
                    razorpayment(res)
                }
            })
        })
    }
    // function to initiate razor payment 
    function razorpayment(order) {
        var options = {
            "key": "rzp_test_g92IremCNiXMBf", // Enter the Key ID generated from the Dashboard
            "amount": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
            "currency": "INR",
            "name": "Big Mart",
            "description": "Test Transaction",
            "image": "https://example.com/your_logo",
            "order_id": order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
            "handler": function (response) {
                varifyPayment(response, order)
            },
            "prefill": {
                "name": order.name,
                "email": order.email,
                "contact": order.phone
            },
            "notes": {
                "address": "Razorpay Corporate Office"
            },
            "theme": {
                "color": "#3399cc"
            }
        };
        var rzp1 = new Razorpay(options);
        rzp1.on('payment.failed', function (response) {
            alert('sorry payment failed please try again later')
        });
        rzp1.open();
    }
    function varifyPayment(data, orderdata) {
        $.ajax({
            url: '/cart/verifyPayment',
            method: 'post',
            data: { payment: data, order: orderdata },
            success: (res => {
                if (res.err) alert('sorry error occured')
                else location.replace('/order-success')
            })
        })
    }
</script>